<div class="my-3 font-bold border-4 border-double border-black">
    <div class="p-1">
        <div>
            <div class="border-x-1 ">
                <a href="/account/" class="inline-block self-center	">
                    <svg xmlns="http://www.w3.org/2000/svg" class="fill-black w-4" viewBox="0 0 320 512">
                        <!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                        <path d="M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 
                160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5
                 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z" />
                    </svg>
                </a>
                <h2 class=" block text-center text-2xl text-emerald-400 ">
                    Form Created Account User
                </h2>
            </div>
            {{!-- <div class="mt-3 p-1 border  border-solid focus-within:p-5 md:focus-within:p-1 border-black">
                <input type="search" placeholder="Search User"
                    class="w-full  p-1 focus:fixed md:focus:relative top-0 left-0">
            </div> --}}

        </div>
        <form class="mt-2 border border-solid border-black p-2" action="create/" method="post">
            <div>
                <div class="flex justify-between capitalize ">
                    <div>
                        <label for="username">Username </label>
                    </div>
                    <div class="alert-username text-xs leading-7  font-normal truncate">
                        Please fill 6 character with maximum is 24 character !
                    </div>
                </div>
                <div class="mt-0.5 border  border-solid border-black focus-within:p-3 md:focus-within:p-0">
                    <input type="text" maxlength="24" name="username" class="outline-none px-2 w-full  
                        focus:fixed top-0 left-0 md:focus:relative focus:border  focus:border-solid focus:border-black
                        md:focus:border-0  
                         " id="username">
                </div>
            </div>
            <div>
                <div class="flex justify-between capitalize">
                    <div>
                        <label for="email">Email </label>
                    </div>
                    <div class="alert-email text-xs leading-7 text-black  font-normal truncate">
                        Please fill input with email of you !
                    </div>
                </div>
                <div class="mt-0.5 border  border-solid border-black focus-within:p-3 md:focus-within:p-0">
                    <input type="text" name="email" class="outline-none px-2 w-full  
                        focus:fixed top-0 left-0 md:focus:relative focus:border  focus:border-solid focus:border-black
                        md:focus:border-0  
                         " id="email">
                </div>
            </div>
            <div>
                <div class="flex justify-between capitalize">
                    <div>
                        <label for="password">Password </label>
                    </div>
                    <div class="alert-password text-xs leading-7  font-normal truncate">
                        password must be than 8 characters !
                    </div>
                </div>
                <div class="mt-0.5 border  border-solid border-black focus-within:p-3 md:focus-within:p-0">
                    <input type="password" name="password" class="outline-none px-2 w-full  
                        focus:fixed top-0 left-0 md:focus:relative focus:border  focus:border-solid focus:border-black
                        md:focus:border-0  
                         " id="password">
                </div>
            </div>
            <div>
                <div class="flex justify-between capitalize">
                    <div>
                        <label for="re-enterPassword">Re-Enter Password </label>
                    </div>
                    <div class=" alert-reEnterPassword text-xs leading-7   font-normal truncate">
                        Re-Enter Password must be same as the password !
                    </div>
                </div>
                <div class="mt-0.5 border  border-solid border-black focus-within:p-3 md:focus-within:p-0">
                    <input type="password" class="outline-none px-2 w-full  
                        focus:fixed top-0 left-0 md:focus:relative focus:border  focus:border-solid focus:border-black
                        md:focus:border-0  
                         " id="re-enterPassword">
                </div>
            </div>

            <div class="flex justify-center">
                <div class="mt-2 inline-block">
                    <input type="submit" class="p-1 bg-emerald-300 opacity-50 " value="Create">
                </div>
            </div>

        </form>
    </div>
</div>
<div class="nameAdmin hidden">
    {{nameAdmin}}
</div>
<script>

    const username = document.getElementById("username");
    const email = document.getElementById("email");
    const password = document.getElementById("password");
    const reEnterPassword = document.getElementById("re-enterPassword");
    const btnSubmit = document.querySelector('input[type=submit]')
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    const data = {{{ resultData }}}

    function checkUserName() {
        const alertTag = document.querySelector('.alert-username')
        if (checkInputWithLengthGreatThanSixChar(username, 'username')) {
            if (username.value.trim() !== email.value) {
                alertTag.classList.remove("text-red-600")
                alertTag.classList.add("text-green-600")
                alertTag.innerHTML = ("Please fill 6 character with maximum is 22 character !");
                return true;
            } else {
                alertTag.innerHTML = ("your Username must  other Email !");
                alertTag.classList.remove("text-green-600")
                alertTag.classList.add("text-red-600")
                return false;
            }
        }

    }
    function checkEmail() {
        const alertTag = document.querySelector('.alert-email')
        const map = new Map();
        for (let i = 0; i < data.length; i++) {
            if (data[i].email == email.value) {
                map.set('check', true)
            } else {
                map.set('check', false)
            }
        }

        if (regex.test(email.value)) {
            if (!map.get('check')) {

                alertTag.classList.remove("text-red-600")
                alertTag.classList.add("text-green-600")
                return true
            } else {
                alertTag.innerHTML = ("Your Email Have Been Use !");
                alertTag.classList.remove("text-green-600")
                alertTag.classList.add("text-red-600")
                return false
            }
        } else {
            alertTag.innerHTML = ("Please fill input with email of you!");
            alertTag.classList.remove("text-green-600")
            alertTag.classList.add("text-red-600")
            return false
        }
    }
    function checkInputWithLengthGreatThanSixChar(tag, nameAlert) {
        const alertTag = document.querySelector(`.alert-${nameAlert}`)
        if (tag.value.trim().length > 6) {

            alertTag.classList.remove("text-red-600")
            alertTag.classList.add("text-green-600")
            return true;
        } else {
            alertTag.classList.remove("text-green-600")
            alertTag.classList.add("text-red-600")
            return false;
        }
    }
     function checkInputWithLengthGreatThanEightChar(tag, nameAlert) {
        const alertTag = document.querySelector(`.alert-${nameAlert}`)
        if (tag.value.trim().length >= 8) {

            alertTag.classList.remove("text-red-600")
            alertTag.classList.add("text-green-600")
            return true;
        } else {
            alertTag.classList.remove("text-green-600")
            alertTag.classList.add("text-red-600")
            return false;
        }
    }
    function checkPassword() {
        const alertTag = document.querySelector('.alert-password')
        if (checkInputWithLengthGreatThanEightChar(password, 'password')) {
            if (password.value.trim() !== email.value || email.value.trim().length == 0) {
                alertTag.innerHTML = ("Password Must Be Than 6 Characters !");
                alertTag.classList.remove("text-red-600")
                alertTag.classList.add("text-green-600")
                return true;
            } else {
                alertTag.innerHTML = ("password of you must  other Email !");
                alertTag.classList.remove("text-green-600")
                alertTag.classList.add("text-red-600")
                return false;
            }

        }
    }
    function checkReEnterPassword() {
        const alertTag = document.querySelector('.alert-reEnterPassword')
        if (reEnterPassword.value.trim().length > 8 && password.value.trim() == reEnterPassword.value) {

            alertTag.classList.remove("text-red-600")
            alertTag.classList.add("text-green-600")
            return true;
        } else {
            alertTag.classList.remove("text-green-600")
            alertTag.classList.add("text-red-600")
            return false;
        }
    }

    function openSubmit() {
        if (username.value.trim().length > 6 && /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email.value)
            && password.value.trim().length >= 8 && reEnterPassword.value.trim().length >= 8
            && reEnterPassword.value == password.value
            && checkUserName() && checkPassword()
            && checkEmail()
        ) {
            btnSubmit.classList.remove("opacity-50")
            btnSubmit.classList.add("opacity-100")
            btnSubmit.classList.add("cursor-pointer")
        } else {
            btnSubmit.classList.remove("opacity-100")
            btnSubmit.classList.add("opacity-50")
            btnSubmit.classList.remove("cursor-pointer")
        }
    }
    username.onblur = () => {
        openSubmit()
        checkInputWithLengthGreatThanSixChar(username, 'username')
        checkUserName()
    }
    email.onblur = () => {
        openSubmit()
        checkEmail()
        checkUserName()
        checkPassword()
    }
    password.onblur = () => {
        openSubmit()
        checkInputWithLengthGreatThanEightChar(password, 'password')
        checkReEnterPassword()
        checkPassword()
    }
    reEnterPassword.onblur = () => {
        openSubmit()
        checkReEnterPassword()
        checkInputWithLengthGreatThanEightChar(password, 'password')
        checkPassword()

    }


    btnSubmit.onclick = (e) => {
        const checkBeforeSubmitUsernameChar = checkInputWithLengthGreatThanSixChar(username, 'username')
        const checkBeforeSubmitPasswordChar = checkInputWithLengthGreatThanEightChar(password, 'password')
        const checkBeforeSubmitUsername = checkUserName()
        const checkBeforeSubmitEmail = checkEmail()
        const checkBeforeSubmitPassword = checkPassword()
        const checkBeforeSubmitReEnterPassword = checkReEnterPassword()
        if (checkBeforeSubmitUsername && checkBeforeSubmitEmail
            && checkBeforeSubmitPassword && checkBeforeSubmitReEnterPassword
            && checkBeforeSubmitUsernameChar && checkBeforeSubmitPasswordChar) {
            return true
        } else {
            e.preventDefault()
        }
    }

</script>