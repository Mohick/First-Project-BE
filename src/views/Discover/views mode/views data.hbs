<div class="my-3 font-bold border-4 border-double border-black">
    <div class="p-1">
        <div>

            <div class="border-x-1 flex gap-2 inline-block ">
                <a href="/discover/" class="inline-block self-center	">
                    <svg xmlns="http://www.w3.org/2000/svg" class="fill-black w-4" viewBox="0 0 320 512">
                        <!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                        <path d="M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 
                160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5
                 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z" />
                    </svg>
                </a>
                <h2 class="p-2 block ">
                    Views Data
                </h2>
            </div>
            <div class="mt-3 p-1 border flex  border-solid focus-within:justify-end  border-black">
                <input type="search" placeholder="Search User"
                    class="w-full   outline-none  p-1 focus:fixed md:focus:relative top-0 left-0">
                <input type="button" class="flex justify-end p-1 bg-green-400 cursor-pointer rounded-sm" value="Find">
            </div>

        </div>
        <div class=" mt-2 border block border-solid capitalize border-black overflow-y-auto   max-h-96 p-2">
            <div
                class="container__items-data grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2 border  xl:grid-cols-4 2xl:grid-cols-6">

            </div>
        </div>
    </div>
</div>

<div
    class="hidden viewData_container_form-delete fixed top-0 right-0 left-0 bottom-0  items-center    justify-center bg-black/50">
    <form action="" method="post" class="viewData_form-delete border border-black inline-block bg bg-white h-auto p-2">
        <div class="title font-bold text-red-600 text-2xl">
            You have want delete this it item !
        </div>
        <div class="flex justify-end gap-2 mt-2 ">
            <div><button class="viewData_form-delete-submit block delete p-1 bg-red-500" type="submit">Delete</button>
            </div>
            <div>
                <div class="viewData_form-delete-cannel block cannel p-1 bg-slate-400" type="data">Cannel</div>
            </div>
        </div>
    </form>
</div>

<div class="nameAdmin hidden">
    {{nameAdmin}}
</div>
<script>
    const boxItemsData = document.querySelector('.container__items-data')
    const inputSearchData = document.querySelector('input[type="button"]')

    const resultData = {{{ resultData }}}
    function renderItems(data) {
        const content = data.reduce((begin, value, index) => {
            return begin + ` <div class=" p-1 border border-solid border-black w-full overflow-hidden ">
                    <div class="p-1  border border-solid border-black">
                        <div class="  truncate ">
                            id :
                            <span>
                                ${value._id}
                            </span>
                        </div>
                        <div class="  truncate ">
                            Audio :
                            <a target= "_blank" href="${value.audioMusical}">
                                ${value.audioMusical}
                            </a>
                        </div>
                        <div class="  truncate ">
                             Image :
                            <a target= "_blank" href="${value.imageMusical}">
                                ${value.imageMusical}
                            </a>
                        </div>
                        <div class="  truncate ">
                            Title Song :
                            <span>
                               ${value.titleMusical}
                            </span>
                        </div>

                        <div class="  truncate ">
                            name singer :
                            <span>
                               ${value.nameSinger}
                            </span>
                        </div>
                        <div class="  truncate ">
                            like :
                            <span>
                                ${value.country}
                            </span>
                        </div>
                        <div class="  truncate ">
                            like :
                            <span>
                                ${value.like}
                            </span>
                        </div>
                    </div>
                    <div class="flex mt-2 justify-between mb-1">
                        <a href="edit/${value._id}/" class="block p-2 bg-green-500 ">update</a>
                        <a  href="delete/${value._id}?_method=delete" class="viewData-delete block p-2 bg-red-400 ">delete</a>
                    </div>
                </div>`
        }, '')
        return content
    }
    if (resultData.length > 0) {
        boxItemsData.innerHTML = renderItems(resultData)
    } else {
        boxItemsData.classList.remove("text-center")
        boxItemsData.classList.remove("grid")
        boxItemsData.classList.add("block")
        boxItemsData.innerHTML = " You do not have Items to display !"
    }

    inputSearchData.onclick = function (tag) {
        const inputSearchData = document.querySelector('input[type="search"]')
        const value = inputSearchData.value.trim();
        const findData = resultData.filter((dataEmail) => {
            const convertString = '' + dataEmail.titleMusical.trim()
            return convertString.toLowerCase().startsWith(value.toLowerCase())
        })

        if (value.length > 0) {
            boxItemsData.innerHTML = renderItems(findData)
            boxItemsData.classList.remove("text-center")
            boxItemsData.classList.add("grid")
            boxItemsData.classList.remove("block")
            const idDeleteAll = document.querySelectorAll('.viewData-delete')
            idDeleteAll.forEach((value) => {
                value.onclick = (e) => {
                    e.preventDefault();
                    formDelete.action = e.target.href
                    handleCollapsible(true)
                }
            })
        }
        else {
            boxItemsData.innerHTML = renderItems(resultData)
            boxItemsData.classList.remove("text-center")
            boxItemsData.classList.add("grid")
            boxItemsData.classList.remove("block")
            const idDeleteAll = document.querySelectorAll('.viewData-delete')
            idDeleteAll.forEach((value) => {
                value.onclick = (e) => {
                    e.preventDefault();
                    formDelete.action = e.target.href
                    handleCollapsible(true)
                }
            })
        }

        if (findData.length == 0) {
            boxItemsData.classList.add("text-center")
            boxItemsData.classList.remove("grid")
            boxItemsData.classList.add("block")
            boxItemsData.innerHTML = " Not Found  Items to display !"
        }

    }
    const containerFormDelete = document.querySelector('.viewData_container_form-delete')
    const formDelete = document.querySelector('.viewData_form-delete')
    const btnSubmit = document.querySelector('.viewData_form-delete-submit')
    const btnCannel = document.querySelector('.viewData_form-delete-cannel')
    function handleCollapsible(requiment = true) {
        if (requiment) {
            containerFormDelete.classList.remove('hidden')
            containerFormDelete.classList.add('flex')
        }
        else {
            containerFormDelete.classList.remove('flex')
            containerFormDelete.classList.add('hidden')
        }
    }
    const idDeleteAll = document.querySelectorAll('.viewData-delete')
    idDeleteAll.forEach((value) => {
        value.onclick = (e) => {
            e.preventDefault();
            formDelete.action = e.target.href
            handleCollapsible(true)
        }
    })
    containerFormDelete.onclick = function () {
        handleCollapsible(false)
    }
    btnCannel.onclick = function (e) {
        handleCollapsible(false)
    }
    btnSubmit.onclick = function () {
        formDelete.action = idDelete.data_id
    }
    formDelete.onclick = function (e) {
        e.stopPropagation()
    }
    const tagNameAdmin = document.querySelector('.nameAdmin')
    if (!!tagNameAdmin) {
        const usernameAdmin = document.querySelector('#usernameAdmin')
        if ((tagNameAdmin.innerHTML + '').trim().length > 0) {
            usernameAdmin.innerHTML = `
                 <div id="header__name--user" class="items-end text-end m-1 p-1.5 capitalize
                         text-purple-50 relative  rounded hover:text-neutral-950 hover:bg-zinc-200 inline-block no-underline
                         ">
                                ${(tagNameAdmin.innerHTML + '').trim()}
                                <ul class="header__name--user--dropdown">
                                    <li>
                                        <a href="/profile">Profile</a>
                                    </li>
                                    <li>
                                        <a href="/setting">Setting</a>
                                    </li>
                                    <li>
                                        <a href="/grant permissions">grant permissions</a>
                                    </li>
                                    <li>
                                        <a href="/logout">Logout</a>
                                    </li>
                                </ul>
                            </div>`
        }
    }
    document.querySelector('title').innerHTML = 'Discover'

</script>